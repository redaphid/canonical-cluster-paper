{
  "doc": {
    "main": [
      {
        "title": "Identity and authorization technology",
        "prompts": [
          {
            "prompt": "Describe your experience with authorization systems, specifically Open Policy Agent and OAuth.",
            "answer": "I have an extensive, varied experience when it comes to authorization and authentication systems.\nI will give some brief bullet points of my experiences over time with various authorization systems, and then I will give some more detailed examples of my experience with Open Policy Agent and OAuth.\n\n* The earliest \"exotic\" auth system I encountered in my career was a strange one called [OACC](http://oaccframework.org). It is a open-source system created by a colleague, and I remember it to be something like RBAC, with some permission delegation mechanism.\n\n* Next, I worked for Unicon and used [Shiboboleth](https://www.shibboleth.net/) (a SAML-based identity provider)\n\n* After this, I began work on the open-source Internet of Things platform \"Meshblu\", and the closed source application that ran on top of it called \"Octoblu\". Octoblu was later acquired by Citrix.\n\n#### Experience with Meshblu\nMeshblu is capable of configuring and messaging hardware or software \"devices\" hardware being things like hue bulbs, or DIY Arduino projects, and software being things like web applications. My team inherited Meshblu with a [permission system](https://meshblu.readme.io/reference/whitelists) that was baked directly in to the json document that represented the configuration of the device. This system was a simple one - arrays of concrete uuids that are allowed to perform certain actions. This system was only capable of dealing with concrete entities - no roles, groups, etc. My colleagues and I eventually replaced it with a [more flexible system](https://meshblu.readme.io/reference/whitelists-2-0) that is still very simple and easy to understand.\n\nIn short, it is a 2-dimensional \"permission matrix\", where the first dimension is the actions that can be taken on a device {broadcast, discover, configure, message}, and the second dimension usually has 2-3 permissions that were relevant to the action domain. Critically, we added an 'as' permission, allowed for impersonation, which made groups possible without being baked in to the system.\n\nOn top of this, we have many microservices that exist in \"userland\" with respect to Meshblu; they services could implement more complex authorization systems on top of Meshblu if they wanted something more complex.\n"
          },
          {
            "prompt": "Describe your experience integrating OpenID Connect providers or using OpenID Connect libraries in your projects.",
            "answer": "answer 2"
          },
          {
            "prompt": "Describe your experience with container technologies such as Docker, LXD and Kubernetes.",
            "answer": "answer 2"
          }
        ]
      },
      {
        "title": "General Software Engineering experience",
        "prompts": [
          {
            "prompt": "Describe your experience integrating OpenID Connect providers or using OpenID Connect libraries in your projects.",
            "answer": "answer 1"
          }
        ]
      }
    ],
    "paragraphs": null,
    "thanks_at_the_end": "I am impressed by the context you have provided me during this process.\nI know some people think it's a bad thing to do this kind of work up front - and I've heard muttering on Reddit, etc that these first set of questions are unreasonable - but contextualizing them as a quasi-first-interview makes it seem totally reasonable. In addition, I am equally impressed by the role you play when it comes to finding the right fit for applicants, even if they have applied to the wrong position. I wish other hiring processes were more like this. Anyway, just wanted to let y'all know those thoughts crossed my mind.\n-"
  }
}
